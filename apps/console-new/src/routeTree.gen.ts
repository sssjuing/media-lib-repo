/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ActressesIndexRouteImport } from './routes/actresses/index'
import { Route as ActressesCreateRouteImport } from './routes/actresses/create'
import { Route as VideosPathlessLayoutRouteRouteImport } from './routes/videos/_pathlessLayout/route'
import { Route as VideosPathlessLayoutIndexRouteImport } from './routes/videos/_pathlessLayout/index'
import { Route as VideosPathlessLayoutCreateRouteImport } from './routes/videos/_pathlessLayout/create'
import { Route as VideosVideoIdEditRouteImport } from './routes/videos/$videoId/edit'
import { Route as ActressesActressIdVideosRouteImport } from './routes/actresses/$actressId/videos'
import { Route as ActressesActressIdEditRouteImport } from './routes/actresses/$actressId/edit'
import { Route as VideosVideoIdABCDRouteImport } from './routes/videos/$videoId/a/b/c/d'

const VideosRouteImport = createFileRoute('/videos')()

const VideosRoute = VideosRouteImport.update({
  id: '/videos',
  path: '/videos',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ActressesIndexRoute = ActressesIndexRouteImport.update({
  id: '/actresses/',
  path: '/actresses/',
  getParentRoute: () => rootRouteImport,
} as any)
const ActressesCreateRoute = ActressesCreateRouteImport.update({
  id: '/actresses/create',
  path: '/actresses/create',
  getParentRoute: () => rootRouteImport,
} as any)
const VideosPathlessLayoutRouteRoute =
  VideosPathlessLayoutRouteRouteImport.update({
    id: '/_pathlessLayout',
    getParentRoute: () => VideosRoute,
  } as any)
const VideosPathlessLayoutIndexRoute =
  VideosPathlessLayoutIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => VideosPathlessLayoutRouteRoute,
  } as any)
const VideosPathlessLayoutCreateRoute =
  VideosPathlessLayoutCreateRouteImport.update({
    id: '/create',
    path: '/create',
    getParentRoute: () => VideosPathlessLayoutRouteRoute,
  } as any)
const VideosVideoIdEditRoute = VideosVideoIdEditRouteImport.update({
  id: '/$videoId/edit',
  path: '/$videoId/edit',
  getParentRoute: () => VideosRoute,
} as any)
const ActressesActressIdVideosRoute =
  ActressesActressIdVideosRouteImport.update({
    id: '/actresses/$actressId/videos',
    path: '/actresses/$actressId/videos',
    getParentRoute: () => rootRouteImport,
  } as any)
const ActressesActressIdEditRoute = ActressesActressIdEditRouteImport.update({
  id: '/actresses/$actressId/edit',
  path: '/actresses/$actressId/edit',
  getParentRoute: () => rootRouteImport,
} as any)
const VideosVideoIdABCDRoute = VideosVideoIdABCDRouteImport.update({
  id: '/$videoId/a/b/c/d',
  path: '/$videoId/a/b/c/d',
  getParentRoute: () => VideosRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/videos': typeof VideosPathlessLayoutRouteRouteWithChildren
  '/actresses/create': typeof ActressesCreateRoute
  '/actresses': typeof ActressesIndexRoute
  '/actresses/$actressId/edit': typeof ActressesActressIdEditRoute
  '/actresses/$actressId/videos': typeof ActressesActressIdVideosRoute
  '/videos/$videoId/edit': typeof VideosVideoIdEditRoute
  '/videos/create': typeof VideosPathlessLayoutCreateRoute
  '/videos/': typeof VideosPathlessLayoutIndexRoute
  '/videos/$videoId/a/b/c/d': typeof VideosVideoIdABCDRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/videos': typeof VideosPathlessLayoutIndexRoute
  '/actresses/create': typeof ActressesCreateRoute
  '/actresses': typeof ActressesIndexRoute
  '/actresses/$actressId/edit': typeof ActressesActressIdEditRoute
  '/actresses/$actressId/videos': typeof ActressesActressIdVideosRoute
  '/videos/$videoId/edit': typeof VideosVideoIdEditRoute
  '/videos/create': typeof VideosPathlessLayoutCreateRoute
  '/videos/$videoId/a/b/c/d': typeof VideosVideoIdABCDRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/videos': typeof VideosRouteWithChildren
  '/videos/_pathlessLayout': typeof VideosPathlessLayoutRouteRouteWithChildren
  '/actresses/create': typeof ActressesCreateRoute
  '/actresses/': typeof ActressesIndexRoute
  '/actresses/$actressId/edit': typeof ActressesActressIdEditRoute
  '/actresses/$actressId/videos': typeof ActressesActressIdVideosRoute
  '/videos/$videoId/edit': typeof VideosVideoIdEditRoute
  '/videos/_pathlessLayout/create': typeof VideosPathlessLayoutCreateRoute
  '/videos/_pathlessLayout/': typeof VideosPathlessLayoutIndexRoute
  '/videos/$videoId/a/b/c/d': typeof VideosVideoIdABCDRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/videos'
    | '/actresses/create'
    | '/actresses'
    | '/actresses/$actressId/edit'
    | '/actresses/$actressId/videos'
    | '/videos/$videoId/edit'
    | '/videos/create'
    | '/videos/'
    | '/videos/$videoId/a/b/c/d'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/videos'
    | '/actresses/create'
    | '/actresses'
    | '/actresses/$actressId/edit'
    | '/actresses/$actressId/videos'
    | '/videos/$videoId/edit'
    | '/videos/create'
    | '/videos/$videoId/a/b/c/d'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/videos'
    | '/videos/_pathlessLayout'
    | '/actresses/create'
    | '/actresses/'
    | '/actresses/$actressId/edit'
    | '/actresses/$actressId/videos'
    | '/videos/$videoId/edit'
    | '/videos/_pathlessLayout/create'
    | '/videos/_pathlessLayout/'
    | '/videos/$videoId/a/b/c/d'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  VideosRoute: typeof VideosRouteWithChildren
  ActressesCreateRoute: typeof ActressesCreateRoute
  ActressesIndexRoute: typeof ActressesIndexRoute
  ActressesActressIdEditRoute: typeof ActressesActressIdEditRoute
  ActressesActressIdVideosRoute: typeof ActressesActressIdVideosRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/videos': {
      id: '/videos'
      path: '/videos'
      fullPath: '/videos'
      preLoaderRoute: typeof VideosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/actresses/': {
      id: '/actresses/'
      path: '/actresses'
      fullPath: '/actresses'
      preLoaderRoute: typeof ActressesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/actresses/create': {
      id: '/actresses/create'
      path: '/actresses/create'
      fullPath: '/actresses/create'
      preLoaderRoute: typeof ActressesCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/videos/_pathlessLayout': {
      id: '/videos/_pathlessLayout'
      path: '/videos'
      fullPath: '/videos'
      preLoaderRoute: typeof VideosPathlessLayoutRouteRouteImport
      parentRoute: typeof VideosRoute
    }
    '/videos/_pathlessLayout/': {
      id: '/videos/_pathlessLayout/'
      path: '/'
      fullPath: '/videos/'
      preLoaderRoute: typeof VideosPathlessLayoutIndexRouteImport
      parentRoute: typeof VideosPathlessLayoutRouteRoute
    }
    '/videos/_pathlessLayout/create': {
      id: '/videos/_pathlessLayout/create'
      path: '/create'
      fullPath: '/videos/create'
      preLoaderRoute: typeof VideosPathlessLayoutCreateRouteImport
      parentRoute: typeof VideosPathlessLayoutRouteRoute
    }
    '/videos/$videoId/edit': {
      id: '/videos/$videoId/edit'
      path: '/$videoId/edit'
      fullPath: '/videos/$videoId/edit'
      preLoaderRoute: typeof VideosVideoIdEditRouteImport
      parentRoute: typeof VideosRoute
    }
    '/actresses/$actressId/videos': {
      id: '/actresses/$actressId/videos'
      path: '/actresses/$actressId/videos'
      fullPath: '/actresses/$actressId/videos'
      preLoaderRoute: typeof ActressesActressIdVideosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/actresses/$actressId/edit': {
      id: '/actresses/$actressId/edit'
      path: '/actresses/$actressId/edit'
      fullPath: '/actresses/$actressId/edit'
      preLoaderRoute: typeof ActressesActressIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/videos/$videoId/a/b/c/d': {
      id: '/videos/$videoId/a/b/c/d'
      path: '/$videoId/a/b/c/d'
      fullPath: '/videos/$videoId/a/b/c/d'
      preLoaderRoute: typeof VideosVideoIdABCDRouteImport
      parentRoute: typeof VideosRoute
    }
  }
}

interface VideosPathlessLayoutRouteRouteChildren {
  VideosPathlessLayoutCreateRoute: typeof VideosPathlessLayoutCreateRoute
  VideosPathlessLayoutIndexRoute: typeof VideosPathlessLayoutIndexRoute
}

const VideosPathlessLayoutRouteRouteChildren: VideosPathlessLayoutRouteRouteChildren =
  {
    VideosPathlessLayoutCreateRoute: VideosPathlessLayoutCreateRoute,
    VideosPathlessLayoutIndexRoute: VideosPathlessLayoutIndexRoute,
  }

const VideosPathlessLayoutRouteRouteWithChildren =
  VideosPathlessLayoutRouteRoute._addFileChildren(
    VideosPathlessLayoutRouteRouteChildren,
  )

interface VideosRouteChildren {
  VideosPathlessLayoutRouteRoute: typeof VideosPathlessLayoutRouteRouteWithChildren
  VideosVideoIdEditRoute: typeof VideosVideoIdEditRoute
  VideosVideoIdABCDRoute: typeof VideosVideoIdABCDRoute
}

const VideosRouteChildren: VideosRouteChildren = {
  VideosPathlessLayoutRouteRoute: VideosPathlessLayoutRouteRouteWithChildren,
  VideosVideoIdEditRoute: VideosVideoIdEditRoute,
  VideosVideoIdABCDRoute: VideosVideoIdABCDRoute,
}

const VideosRouteWithChildren =
  VideosRoute._addFileChildren(VideosRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  VideosRoute: VideosRouteWithChildren,
  ActressesCreateRoute: ActressesCreateRoute,
  ActressesIndexRoute: ActressesIndexRoute,
  ActressesActressIdEditRoute: ActressesActressIdEditRoute,
  ActressesActressIdVideosRoute: ActressesActressIdVideosRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
