name: CI — build docker image & push image

on:
  push:
    branches: [release]
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/media-lib
  GO_VERSION: "1.24" # 指定 Go 版本
  NODE_VERSION: "22" # 与 pnpm 搭配

jobs:
  build:
    runs-on: ubuntu-latest # 已内置 Docker Engine
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---------- 1. 安装 Go 1.24 ----------
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      # ---------- 2. 安装 Node + pnpm ----------
      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      # ---------- 3. 运行构建 ----------
      - name: Install pnpm deps
        run: pnpm install --frozen-lockfile

      - name: Build # 如果有前端产物，例如 dist/
        run: pnpm run dockerbuild

      # ---------- 4. 登录并推送 ----------
      - name: Get version
        id: version
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_OUTPUT # 把版本塞进输出变量

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Tag & push
        run: |
          docker tag media-lib:latest ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}
          docker tag media-lib:latest ${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}
          docker push ${{ env.IMAGE_NAME }}:latest
